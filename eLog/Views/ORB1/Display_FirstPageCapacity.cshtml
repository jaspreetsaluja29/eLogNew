@model eLog.Models.ORB1.FirstPageCapacityViewModel
@{
    Layout = "_Layout";  // Use the layout file from /Views/Shared/_Layout.cshtml
}
@{
    ViewData["Title"] = "Tank Capacity Display";
}

<link rel="stylesheet" href="~/css/ORB1/DisplayFirstPageCapacity.css" asp-append-version="true" />

<div style="text-align: center; margin-bottom: 20px;">
    <h2 style="margin-bottom: 10px;">Tank Capacity Display</h2>
</div>

<div class="container">
    <h4 style="margin-bottom: 20px;">Oil Residues (sludge) tanks for retention of oil Residue (Residue) / Section-3.1</h4>

    @if (Model.OilyBilgeRetentions != null && Model.OilyBilgeRetentions.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th style="padding: 10px;">Tank Identification</th>
                    <th style="padding: 10px;">Tank Location (Frames: From-To)</th>
                    <th style="padding: 10px;">Lateral Position</th>
                    <th style="padding: 10px;">Volume (m³)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OilyBilgeRetentions)
                {
                    <tr>
                        <td>@item.TankIdentification</td>
                        <td>@item.TankLocation_Frames_From_To</td>
                        <td>@item.TankLocation_LateralPosition</td>
                        <td>@item.Volume_m3</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2" class="text-right font-weight-bold">Total Volume:</td>
                    <td>@Model.OilyBilgeRetentions.Sum(x => x.Volume_m3).ToString("F2") m³</td>
                </tr>
            </tfoot>
        </table>
    }
    else
    {
        <div class="alert alert-info">
            <p>No tank capacity data available for Oily Bilge Retention.</p>
        </div>
    }

    <h4 style="margin-bottom: 20px; margin-top: 40px;">Holding Tank(s) for the retention on baord of Oily bilge water / Section 3.3</h4>

    @if (Model.OilResidueBilges != null && Model.OilResidueBilges.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th style="padding: 10px;">Tank Identification</th>
                    <th style="padding: 10px;">Tank Location (Frames: From-To)</th>
                    <th style="padding: 10px;">Lateral Position</th>
                    <th style="padding: 10px;">Volume (m³)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OilResidueBilges)
                {
                    <tr>
                        <td>@item.TankIdentification</td>
                        <td>@item.TankLocation_Frames_From_To</td>
                        <td>@item.TankLocation_LateralPosition</td>
                        <td>@item.Volume_m3</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2" class="text-right font-weight-bold">Total Volume:</td>
                    <td>@Model.OilResidueBilges.Sum(x => x.Volume_m3).ToString("F2") m³</td>
                </tr>
            </tfoot>
        </table>
    }
    else
    {
        <div class="alert alert-info">
            <p>No tank capacity data available for Oil Residue Bilge (Sludge).</p>
        </div>
    }

    <h4 style="margin-bottom: 20px; margin-top: 40px;">Means for disposal of oil residues retained in Oil Residue Tanks / Other acceptable means/ Section 3.2.3</h4>

    @if (Model.MeanOilResidue != null && Model.MeanOilResidue.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th style="padding: 10px;">Tank Identification</th>
                    <th style="padding: 10px;">Tank Location (Frames: From-To)</th>
                    <th style="padding: 10px;">Lateral Position</th>
                    <th style="padding: 10px;">Volume (m³)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MeanOilResidue)
                {
                    <tr>
                        <td>@item.TankIdentification</td>
                        <td>@item.TankLocation_Frames_From_To</td>
                        <td>@item.TankLocation_LateralPosition</td>
                        <td>@item.Volume_m3</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2" class="text-right font-weight-bold">Total Volume:</td>
                    <td>@Model.MeanOilResidue.Sum(x => x.Volume_m3).ToString("F2") m³</td>
                </tr>
            </tfoot>
        </table>
    }
    else
    {
        <div class="alert alert-info">
            <p>No tank capacity data Means for disposal of oil residues retained in Oil Residue Tanks.</p>
        </div>
    }

    <h4 style="margin-bottom: 20px; margin-top: 40px;">Bunker Tanks</h4>

    @if (Model.BunkerTanks != null && Model.BunkerTanks.Any())
    {
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th style="padding: 10px;">Tank Identification</th>
                    <th style="padding: 10px;">Capacity (100%)</th>
                    <th style="padding: 10px;">Capacity (90%)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.BunkerTanks)
                {
                    <tr>
                        <td>@item.TankIdentification</td>
                        <td>@item.Capacity100</td>
                        <td>@item.Capacity90</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">
            <p>No tank for Bunker.</p>
        </div>
    }
</div>